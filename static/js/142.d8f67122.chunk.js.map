{"version":3,"file":"static/js/142.d8f67122.chunk.js","mappings":"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","sources":["components/Actions.tsx","utils/helpers/parseDate.ts","pages/News/News.tsx","utils/helpers/sortDate.ts"],"sourcesContent":["import { Button, Flex } from \"antd\";\n\nimport \"../styles/components/_actions.scss\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype Props = {};\n\nconst Actions = (props: Props) => {\n  const navigate = useNavigate();\n  const onCreateNew = () => {\n    navigate(\"edit\");\n  };\n  return (\n    <>\n      <Flex justify=\"flex-end\">\n        <Button\n          type=\"primary\"\n          className=\"create-new-btn\"\n          size=\"large\"\n          onClick={onCreateNew}\n        >\n          + Додати новину\n        </Button>\n      </Flex>\n    </>\n  );\n};\n\nexport default Actions;\n","export const parseDate = (dateString: string): Date => {\n  const [day, month, rest] = dateString.split(\"-\");\n  const [year, time] = rest.split(\" \");\n  const [hours, minutes] = time.split(\":\");\n  return new Date(\n    parseInt(year),\n    parseInt(month) - 1,\n    parseInt(day),\n    parseInt(hours),\n    parseInt(minutes),\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Form, Input, Layout, Popconfirm, Table, Typography } from \"antd\";\nimport Title from \"antd/es/typography/Title\";\n\nimport dayjs from \"dayjs\";\n\nimport Actions from \"../../components/Actions\";\nimport { constants } from \"../../utils/constants\";\nimport { sortDate } from \"../../utils/helpers\";\n\nimport \"./styles/_news.scss\";\n\ntype Props = {};\ninterface Item {\n  key: string;\n  name: string;\n\n  date: string;\n}\n\nconst originData: Item[] = [];\nfor (let i = 0; i < 100; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Новина ${i}`,\n    date:\n      i % 2 === 0\n        ? dayjs(new Date()).format(constants.dateFormat).toString()\n        : dayjs(new Date(new Date().setDate(21)))\n            .format(constants.dateFormat)\n            .toString(),\n  });\n}\n\n//  type: i % 2 === 0 ? \"Семінар\" : \" Тренінг\",\n//     orientation: i % 2 === 0 ? \"Виховники\" : \"Міжнародники\",\n//     ageRestrictions: i % 2 === 0 ? \"Суменята\" : \"Дружинники\",\n\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: \"date\" | \"text\";\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Введіть ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst News = (props: Props) => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const isEditing = (record: Item) => record.key === editingKey;\n\n  const edit = (record: Partial<Item> & { key: React.Key }) => {\n    form.setFieldsValue({\n      name: \"\",\n\n      date: \"\",\n\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key: React.Key) => {\n    try {\n      const row = (await form.validateFields()) as Item;\n\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const deleteNew = (record: Partial<Item>) => {\n    const newData = [...data];\n    const index = data.findIndex((item) => record.key === item.key);\n    newData.splice(index, 1);\n    setData(newData);\n  };\n\n  const columns = [\n    {\n      title: \"Новина\",\n      dataIndex: \"name\",\n      width: \"45%\",\n      editable: true,\n    },\n    {\n      title: \"Дата\",\n      dataIndex: \"date\",\n      width: \"20%\",\n      editable: false,\n      sorter: (a: Item, b: Item) => sortDate(a.date, b.date),\n    },\n    {\n      title: \"Дії\",\n      dataIndex: \"operation\",\n      render: (_: any, record: Item) => {\n        const editable = isEditing(record);\n        return (\n          <>\n            {editable ? (\n              <span>\n                <Typography.Link\n                  onClick={() => save(record.key)}\n                  style={{ marginRight: 8 }}\n                >\n                  Зберегти\n                </Typography.Link>\n                <Popconfirm\n                  title=\"Ви впевнені, що хочете скасувати?\"\n                  onConfirm={cancel}\n                >\n                  <Typography.Link style={{ marginRight: 8 }}>\n                    Скасувати\n                  </Typography.Link>\n                </Popconfirm>\n              </span>\n            ) : (\n              <Typography.Link\n                disabled={editingKey !== \"\"}\n                onClick={() => edit(record)}\n                className=\"edit-btn\"\n              >\n                Редагувати\n              </Typography.Link>\n            )}\n            <Typography.Link\n              disabled={editingKey !== \"\"}\n              onClick={() => deleteNew(record)}\n              className=\"delete-btn\"\n            >\n              Видалити\n            </Typography.Link>\n          </>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: Item) => ({\n        record,\n        inputType: col.dataIndex === \"date\" ? \"date\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <Layout className=\"news-layout layout\">\n      <Title>Новини</Title>\n      <Actions />\n\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={data}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n          sticky={true}\n        />\n      </Form>\n    </Layout>\n  );\n};\n\nexport default News;\n\n// const range = (start: number, end: number) => {\n//   const result = [];\n//   for (let i = start; i < end; i++) {\n//     result.push(i);\n//   }\n//   return result;\n// };\n// const disabledDate: RangePickerProps[\"disabledDate\"] = (current) => {\n//   return current && current < dayjs().endOf(\"day\");\n// };\n\n// const disabledDateTime = () => ({\n//   disabledHours: () => range(0, 24).splice(4, 20),\n//   disabledMinutes: () => range(30, 60),\n// });\n","import { parseDate } from \"./parseDate\";\n\nexport const sortDate = (aDate: string, bDate: string) => {\n  const dateA = parseDate(aDate);\n  const dateB = parseDate(bDate);\n  return dateA.getTime() - dateB.getTime();\n};\n"],"names":["props","navigate","useNavigate","_jsx","_Fragment","children","Flex","justify","Button","type","className","size","onClick","onCreateNew","parseDate","dateString","day","month","rest","split","year","time","hours","minutes","Date","parseInt","originData","i","push","key","toString","name","concat","date","dayjs","format","constants","setDate","EditableCell","_ref","editing","dataIndex","title","inputType","record","index","restProps","inputNode","Input","Form","Item","style","margin","rules","required","message","form","useForm","data","setData","useState","editingKey","setEditingKey","isEditing","cancel","mergedColumns","width","editable","sorter","a","b","sortDate","aDate","bDate","dateA","dateB","getTime","render","_","_jsxs","Typography","Link","async","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","save","marginRight","Popconfirm","onConfirm","disabled","setFieldsValue","edit","deleteNew","map","col","onCell","Layout","Title","Actions","component","Table","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","onChange","sticky"],"sourceRoot":""}