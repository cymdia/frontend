{"version":3,"file":"static/js/786.f3fc3a5d.chunk.js","mappings":"+JAOA,MAsBA,EAtBoBA,IAA0B,IAAzB,SAAEC,GAAiBD,EACtC,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,QAAQ,WAAWC,IAAI,QAAOC,SAAA,EAClCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,QAAM,EACNC,UAAU,mBACVC,QAASV,EACTW,SAAS,SAAQN,SAClB,4DAGDC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLK,KAAK,UACLH,UAAU,iCACVE,SAAS,SAAQN,SAClB,+EAGI,C,oFCfX,MAiBA,EAjBmBN,IAAsD,IAArD,SAAEM,EAAQ,gBAAEQ,EAAe,UAAEC,GAAkBf,EACjE,OACEO,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACN,UAAS,UAAAO,OAAYH,GAAkBR,UAC7CJ,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHe,UAAU,EACVC,MAAM,SACNf,QAAQ,SACRC,IAAI,QACJK,UAAU,eAAcJ,SAAA,EAExBC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACV,UAAU,aAAYJ,SAAES,IAC9BT,MAEI,C,wKCLb,MAAMe,EAAoC,CACxC,CACEC,KAAM,OACNC,UAAU,EACVC,QAAS,4EACTC,YAAa,sEACbC,UAAW,QAEb,CACEJ,KAAM,cACNC,UAAU,EACVC,QAAS,sEACTC,YAAa,sFACbf,UAAW,qBACXgB,UAAW,aAuDf,EAnDiBC,IACf,MAAOC,GAAQC,EAAAA,EAAKC,UACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACpB,UAAW,4EAAgBT,UACrCJ,EAAAA,EAAAA,MAAC2B,EAAAA,EAAI,CAACD,KAAMA,EAAMlB,UAAU,YAAY0B,SAf3BC,UACf,QAAaC,IAATV,EAAoB,CACtB,MAAMW,QAAgBX,EAAKY,iBAErBC,EAAqB,CACzBC,KAAMC,IAAM,IAAIC,MAAQC,OAAOC,EAAAA,GAAAA,IAAsBC,cAClDR,GAELR,GAASiB,EAAAA,EAAAA,IAAOP,IAChBR,GAAU,EACZ,GAK6D3B,SAAA,CACxDe,EAAiB4B,KAAI,CAACC,EAAMC,KAC3B5C,EAAAA,EAAAA,KAACsB,EAAAA,EAAKuB,KAAI,CACR9B,KAAM4B,EAAK5B,KACX+B,MAAO,CAAC,CAAE9B,SAAU2B,EAAK3B,SAAUC,QAAS0B,EAAK1B,UAAWlB,SAGxC,SAAnB4C,EAAKxB,WACJnB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CACJ7B,YAAayB,EAAKzB,YAClBf,UAAU,qBAGZH,EAAAA,EAAAA,KAAC+C,EAAAA,EAAMC,SAAQ,CACb9B,YAAayB,EAAKzB,YAClBf,UAAS,mBAAAO,OAAqBiC,EAAKxC,WACnC8C,KAAM,KAXLL,MAgBT5C,EAAAA,EAAAA,KAACkD,EAAAA,EAAW,CAACxD,SAxCFA,KACf2B,EAAK8B,aAAa,QAyCL,C","sources":["components/EditActions.tsx","components/EditLayout.tsx","pages/News/EditNew/EditNew.tsx"],"sourcesContent":["import { Button, Flex } from \"antd\";\nimport React from \"react\";\n\ntype Props = {\n  onCancel: () => void;\n};\n\nconst EditActions = ({ onCancel }: Props) => {\n  return (\n    <Flex justify=\"flex-end\" gap=\"large\">\n      <Button\n        danger\n        className=\"edit-form-button\"\n        onClick={onCancel}\n        htmlType=\"button\"\n      >\n        Відмінити\n      </Button>\n      <Button\n        type=\"primary\"\n        className=\"edit-form-button button-accent\"\n        htmlType=\"submit\"\n      >\n        Опублікувати\n      </Button>\n    </Flex>\n  );\n};\n\nexport default EditActions;\n","import React from \"react\";\nimport { Flex, Layout } from \"antd\";\nimport Title from \"antd/es/typography/Title\";\n\ntype Props = {\n  children: React.ReactNode;\n  layoutClassname?: string;\n  titleName: string;\n};\n\nconst EditLayout = ({ children, layoutClassname, titleName }: Props) => {\n  return (\n    <Layout className={`layout ${layoutClassname}`}>\n      <Flex\n        vertical={true}\n        align=\"center\"\n        justify=\"center\"\n        gap=\"large\"\n        className=\"edit-wrapper\"\n      >\n        <Title className=\"edit-title\">{titleName}</Title>\n        {children}\n      </Flex>\n    </Layout>\n  );\n};\n\nexport default EditLayout;\n","import { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppDispatch } from \"state/store\";\nimport { Form, Input } from \"antd\";\nimport dayjs from \"dayjs\";\n\nimport { addNew } from \"state/news/newsOperations\";\nimport { NewsItemType } from \"types/newsItem\";\nimport { FormItemsType } from \"types/formItems\";\nimport { constants } from \"utils/constants\";\n\nimport EditActions from \"components/EditActions\";\nimport EditLayout from \"components/EditLayout\";\n\nimport \"styles/components/_editPage.scss\";\n\ntype Props = {};\n\nconst editNewFormItems: FormItemsType[] = [\n  {\n    name: \"name\",\n    required: true,\n    message: \"Введіть назву\",\n    placeholder: \"Назва новини\",\n    inputType: \"text\",\n  },\n  {\n    name: \"description\",\n    required: true,\n    message: \"Введіть опис\",\n    placeholder: \"Що у вас на думці?\",\n    className: \"edit-form-textarea\",\n    inputType: \"textarea\",\n  },\n];\n\nconst EditNew = (props: Props) => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const onCancel = () => {\n    form.resetFields();\n  };\n\n  const onSubmit = async () => {\n    if (form !== undefined) {\n      const newItem = await form.validateFields();\n\n      const data: NewsItemType = {\n        date: dayjs(new Date()).format(constants.dateFormat).toString(),\n        ...newItem,\n      };\n      dispatch(addNew(data));\n      navigate(-1);\n    }\n  };\n\n  return (\n    <EditLayout titleName={\"Додати Новину\"}>\n      <Form form={form} className=\"edit-form\" onFinish={onSubmit}>\n        {editNewFormItems.map((item, i) => (\n          <Form.Item\n            name={item.name}\n            rules={[{ required: item.required, message: item.message }]}\n            key={i}\n          >\n            {item.inputType === \"text\" ? (\n              <Input\n                placeholder={item.placeholder}\n                className=\"edit-form-field\"\n              />\n            ) : (\n              <Input.TextArea\n                placeholder={item.placeholder}\n                className={`edit-form-field ${item.className}`}\n                rows={3}\n              />\n            )}\n          </Form.Item>\n        ))}\n        <EditActions onCancel={onCancel} />\n      </Form>\n    </EditLayout>\n  );\n};\n\nexport default EditNew;\n"],"names":["_ref","onCancel","_jsxs","Flex","justify","gap","children","_jsx","Button","danger","className","onClick","htmlType","type","layoutClassname","titleName","Layout","concat","vertical","align","Title","editNewFormItems","name","required","message","placeholder","inputType","props","form","Form","useForm","dispatch","useDispatch","navigate","useNavigate","EditLayout","onFinish","async","undefined","newItem","validateFields","data","date","dayjs","Date","format","constants","toString","addNew","map","item","i","Item","rules","Input","TextArea","rows","EditActions","resetFields"],"sourceRoot":""}