{"version":3,"file":"static/js/124.8ea34ccb.chunk.js","mappings":"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","sources":["components/EditActions.tsx","components/EditLayout.tsx","pages/Events/EditEvent/EditEvent.tsx","utils/helpers/parseDate.ts","utils/helpers/sortDate.ts","utils/helpers/disabledDate.ts"],"sourcesContent":["import { Button, Flex } from \"antd\";\nimport React from \"react\";\n\ntype Props = {\n  onCancel: () => void;\n};\n\nconst EditActions = ({ onCancel }: Props) => {\n  return (\n    <Flex justify=\"flex-end\" gap=\"large\">\n      <Button\n        danger\n        className=\"edit-form-button\"\n        onClick={onCancel}\n        htmlType=\"button\"\n      >\n        Відмінити\n      </Button>\n      <Button\n        type=\"primary\"\n        className=\"edit-form-button button-accent\"\n        htmlType=\"submit\"\n      >\n        Опублікувати\n      </Button>\n    </Flex>\n  );\n};\n\nexport default EditActions;\n","import React from \"react\";\nimport { Flex, Layout } from \"antd\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst EditLayout = ({ children }: Props) => {\n  return (\n    <Layout className=\"layout\">\n      <Flex\n        vertical={true}\n        align=\"center\"\n        justify=\"center\"\n        gap=\"large\"\n        className=\"edit-wrapper\"\n      >\n        {children}\n      </Flex>\n    </Layout>\n  );\n};\n\nexport default EditLayout;\n","import {\n  DatePicker,\n  DatePickerProps,\n  Form,\n  Input,\n  Select,\n  SelectProps,\n} from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { AppDispatch } from \"state/store\";\n\nimport EditActions from \"components/EditActions\";\nimport EditLayout from \"components/EditLayout\";\n\nimport { AddEventType } from \"types/addEvent\";\nimport { disabledDate } from \"utils/helpers\";\nimport { addEvent } from \"state/events/eventsOperations\";\nimport {\n  ageRestrictionsItems,\n  orientationItems,\n  typeItems,\n} from \"utils/constants/eventsDropdownData\";\nimport { dateFormat } from \"utils/constants/constants\";\n\nimport \"styles/components/_editPage.scss\";\n\ntype Props = {};\n\ntype EditEventFormItemType = {\n  name: string;\n  required: boolean;\n  message: string;\n  placeholder?: string;\n  rangePlaceholder?: [string, string];\n  inputType: \"text\" | \"textarea\" | \"date\" | \"rangePicker\" | \"dropdownlist\";\n  className?: string;\n  picker?: DatePickerProps[\"picker\"];\n  dropDownListItems?: SelectProps[\"options\"];\n};\n\nconst editEventFormItems: EditEventFormItemType[] = [\n  {\n    name: \"name\",\n    required: true,\n    message: \"Введіть назву\",\n    placeholder: \"Назва події\",\n    inputType: \"text\",\n  },\n  {\n    name: \"type\",\n    required: true,\n    message: \"Виберіть тип\",\n    placeholder: \"Тип\",\n    inputType: \"dropdownlist\",\n    dropDownListItems: typeItems,\n  },\n  {\n    name: \"orientation\",\n    required: true,\n    message: \"Виберіть орієнтацію\",\n    placeholder: \"Орієнтація\",\n    inputType: \"dropdownlist\",\n    dropDownListItems: orientationItems,\n  },\n  {\n    name: \"ageRestrictions\",\n    required: true,\n    message: \"Виберіть вікові обмеження\",\n    placeholder: \"Вікові обмеження\",\n    inputType: \"dropdownlist\",\n    dropDownListItems: ageRestrictionsItems,\n  },\n  {\n    name: \"venue\",\n    required: true,\n    message: \"Введіть місце проведення\",\n    placeholder: \"Місце проведення\",\n    inputType: \"text\",\n  },\n  {\n    name: \"financialFeatures\",\n    required: true,\n    message: \"Введіть фінансові особливості\",\n    placeholder: \"Фінансові особливості\",\n    inputType: \"text\",\n  },\n  {\n    name: \"dateMonth\",\n    required: true,\n    message: \"Виберіть дату(місяць)\",\n    placeholder: \"Дата (місяць)\",\n    inputType: \"date\",\n    picker: \"month\",\n  },\n  {\n    name: \"date\",\n    required: false,\n    message: \"Виберіть початок та кінець події\",\n    rangePlaceholder: [\"Дата початку\", \"Дата кінця\"],\n    inputType: \"rangePicker\",\n    picker: \"date\",\n  },\n];\n\nconst EditEvent = (props: Props) => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const onCancel = () => {\n    form.resetFields();\n  };\n\n  const onSubmit = async () => {\n    if (form !== undefined) {\n      const newItem = (await form.validateFields()) as AddEventType;\n\n      const data: AddEventType = {\n        ...newItem,\n      };\n      dispatch(addEvent(data));\n      navigate(-1);\n    }\n  };\n\n  return (\n    <EditLayout>\n      <Title className=\"edit-title\">Додати Подію</Title>\n      <Form form={form} className=\"edit-form\" onFinish={onSubmit}>\n        {editEventFormItems.map((item, i) =>\n          i < 6 ? (\n            <Form.Item\n              name={item.name}\n              rules={[{ required: item.required, message: item.message }]}\n              className=\"edit-form-item\"\n              key={i}\n            >\n              {item.inputType === \"text\" ? (\n                <Input\n                  placeholder={item.placeholder}\n                  className=\"edit-form-field\"\n                />\n              ) : item.inputType === \"textarea\" ? (\n                <Input.TextArea\n                  placeholder={item.placeholder}\n                  className={`edit-form-field ${item.className}`}\n                  rows={3}\n                />\n              ) : item.inputType === \"dropdownlist\" ? (\n                <Select\n                  className={`edit-form-select ${item.className}`}\n                  options={item.dropDownListItems}\n                  placeholder={item.placeholder}\n                />\n              ) : (\n                <Input\n                  placeholder={item.placeholder}\n                  className=\"edit-form-field\"\n                />\n              )}\n            </Form.Item>\n          ) : (\n            i === 6 && (\n              <Form.Item className=\"edit-form-item-group\">\n                <Form.Item\n                  name={item.name}\n                  rules={[{ required: item.required, message: item.message }]}\n                  className=\"edit-form-item\"\n                  key={i}\n                >\n                  <DatePicker\n                    picker={item.picker}\n                    disabledDate={disabledDate}\n                    placeholder={item.placeholder}\n                    className=\"edit-form-field\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name={editEventFormItems[7].name}\n                  rules={[\n                    {\n                      required: editEventFormItems[7].required,\n                      message: editEventFormItems[7].message,\n                    },\n                  ]}\n                  className=\"edit-form-item\"\n                  key={i + 1}\n                >\n                  <DatePicker.RangePicker\n                    picker={editEventFormItems[7].picker}\n                    disabledDate={disabledDate}\n                    placeholder={editEventFormItems[7].rangePlaceholder}\n                    format={dateFormat}\n                    className=\"edit-form-field\"\n                    showTime={{\n                      hideDisabledOptions: true,\n                    }}\n                  />\n                </Form.Item>\n              </Form.Item>\n            )\n          ),\n        )}\n        <EditActions onCancel={onCancel} />\n      </Form>\n    </EditLayout>\n  );\n};\n\nexport default EditEvent;\n","export const parseDate = (dateString: string): Date => {\n  const [day, month, rest] = dateString.split(\"-\");\n  const [year, time] = rest.split(\" \");\n  const [hours, minutes] = time.split(\":\");\n  return new Date(\n    parseInt(year),\n    parseInt(month) - 1,\n    parseInt(day),\n    parseInt(hours),\n    parseInt(minutes),\n  );\n};\n","import { parseDate } from \"./parseDate\";\n\nexport const sortDate = (aDate: string, bDate: string) => {\n  const dateA = parseDate(aDate);\n  const dateB = parseDate(bDate);\n  return dateA.getTime() - dateB.getTime();\n};\n","import { RangePickerProps } from \"antd/es/date-picker\";\nimport dayjs from \"dayjs\";\n\nconst range = (start: number, end: number) => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n  return result;\n};\n\n// eslint-disable-next-line arrow-body-style\nexport const disabledDate: RangePickerProps[\"disabledDate\"] = (current) => {\n  // Can not select days before today and today\n  return current && current < dayjs().endOf(\"day\");\n};\n\nexport const disabledDateTime = () => ({\n  disabledHours: () => range(0, 24).splice(4, 20),\n  disabledMinutes: () => range(30, 60),\n  disabledSeconds: () => [55, 56],\n});\n\nexport const disabledRangeTime: RangePickerProps[\"disabledTime\"] = (\n  _,\n  type,\n) => {\n  if (type === \"start\") {\n    return {\n      disabledHours: () => range(0, 60).splice(4, 20),\n      disabledMinutes: () => range(30, 60),\n      disabledSeconds: () => [55, 56],\n    };\n  }\n  return {\n    disabledHours: () => range(0, 60).splice(20, 4),\n    disabledMinutes: () => range(0, 31),\n    disabledSeconds: () => [55, 56],\n  };\n};\n"],"names":["_ref","onCancel","_jsxs","Flex","justify","gap","children","_jsx","Button","danger","className","onClick","htmlType","type","Layout","vertical","align","editEventFormItems","name","required","message","placeholder","inputType","dropDownListItems","typeItems","orientationItems","ageRestrictionsItems","picker","rangePlaceholder","props","form","Form","useForm","dispatch","useDispatch","navigate","useNavigate","EditLayout","Title","onFinish","async","undefined","data","validateFields","addEvent","map","item","i","Item","rules","Input","TextArea","concat","rows","Select","options","DatePicker","disabledDate","RangePicker","format","dateFormat","showTime","hideDisabledOptions","EditActions","resetFields","parseDate","dateString","day","month","rest","split","year","time","hours","minutes","Date","parseInt","sortDate","aDate","bDate","dateA","dateB","getTime","current","dayjs","endOf"],"sourceRoot":""}