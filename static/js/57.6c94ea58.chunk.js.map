{"version":3,"file":"static/js/57.6c94ea58.chunk.js","mappings":"sQAyBA,MAAMA,EAA0C,CAC9C,CACEC,KAAM,OACNC,UAAU,EACVC,QAAS,4EACTC,YAAa,sEACbC,UAAW,QAEb,CACEJ,KAAM,cACNC,UAAU,EACVC,QAAS,sEACTC,YAAa,sFACbE,UAAW,yBACXD,UAAW,aA+Ef,EA3EiBE,IACf,MAAOC,GAAQC,EAAAA,EAAKC,UACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAmBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACV,UAAU,SAAQW,UACxBC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,UAAU,EACVC,MAAM,SACNC,QAAQ,SACRC,IAAI,QACJjB,UAAU,mBAAkBW,SAAA,EAE5BF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAAClB,UAAU,iBAAgBW,SAAC,+EAClCC,EAAAA,EAAAA,MAACT,EAAAA,EAAI,CAACD,KAAMA,EAAMF,UAAU,gBAAgBmB,SAvBjCC,UACf,QAAaC,IAATnB,EAAoB,CACtB,MAAMoB,QAAgBpB,EAAKqB,iBAErBC,EAAqB,CACzBC,KAAMC,IAAM,IAAIC,MAAQC,OAAOC,EAAAA,EAAAA,GAAsBC,cAClDR,GAELjB,GAAS0B,EAAAA,EAAAA,IAAOP,IAChBjB,GAAU,EACZ,GAamEI,SAAA,CAC5DjB,EAAiBsC,KAAKC,IACrBxB,EAAAA,EAAAA,KAACN,EAAAA,EAAK+B,KAAI,CACRvC,KAAMsC,EAAKtC,KACXwC,MAAO,CAAC,CAAEvC,SAAUqC,EAAKrC,SAAUC,QAASoC,EAAKpC,UAAWc,SAExC,SAAnBsB,EAAKlC,WACJU,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACJtC,YAAamC,EAAKnC,YAClBE,UAAU,yBAGZS,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMC,SAAQ,CACbvC,YAAamC,EAAKnC,YAClBE,UAAS,uBAAAsC,OAAyBL,EAAKjC,WACvCuC,KAAM,SAKd3B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACG,QAAQ,WAAWC,IAAI,QAAON,SAAA,EAClCF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CACLC,QAAM,EACNzC,UAAU,uBACV0C,QAnDKC,KACfzC,EAAK0C,aAAa,EAmDRC,SAAS,SAAQlC,SAClB,4DAGDF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CACLM,KAAK,UACL9C,UAAU,qCACV6C,SAAS,SAAQlC,SAClB,uFAMA,C","sources":["pages/News/EditNew/EditNew.tsx"],"sourcesContent":["import { Button, Flex, Form, Input, Layout } from \"antd\";\nimport Title from \"antd/es/typography/Title\";\nimport { useDispatch } from \"react-redux\";\nimport { addNew } from \"state/news/newsOperations\";\n\nimport { NewsItemType } from \"types/newsItem\";\n\nimport { constants } from \"utils/constants\";\n\nimport \"styles/components/_editNew.scss\";\nimport dayjs from \"dayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppDispatch } from \"state/store\";\n\ntype Props = {};\n\ntype EditNewFormItemType = {\n  name: string;\n  required: boolean;\n  message: string;\n  placeholder: string;\n  inputType: \"text\" | \"textarea\";\n  className?: string;\n};\n\nconst editNewFormItems: EditNewFormItemType[] = [\n  {\n    name: \"name\",\n    required: true,\n    message: \"Введіть назву\",\n    placeholder: \"Назва новини\",\n    inputType: \"text\",\n  },\n  {\n    name: \"description\",\n    required: true,\n    message: \"Введіть опис\",\n    placeholder: \"Що у вас на думці?\",\n    className: \"edit-new-form-textarea\",\n    inputType: \"textarea\",\n  },\n];\n\nconst EditNew = (props: Props) => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const onCancel = () => {\n    form.resetFields();\n  };\n\n  const onSubmit = async () => {\n    if (form !== undefined) {\n      const newItem = await form.validateFields();\n\n      const data: NewsItemType = {\n        date: dayjs(new Date()).format(constants.dateFormat).toString(),\n        ...newItem,\n      };\n      dispatch(addNew(data));\n      navigate(-1);\n    }\n  };\n\n  return (\n    <Layout className=\"layout\">\n      <Flex\n        vertical={true}\n        align=\"center\"\n        justify=\"center\"\n        gap=\"large\"\n        className=\"edit-new-wrapper\"\n      >\n        <Title className=\"edit-new-title\">Додати Новину</Title>\n        <Form form={form} className=\"edit-new-form\" onFinish={onSubmit}>\n          {editNewFormItems.map((item) => (\n            <Form.Item\n              name={item.name}\n              rules={[{ required: item.required, message: item.message }]}\n            >\n              {item.inputType === \"text\" ? (\n                <Input\n                  placeholder={item.placeholder}\n                  className=\"edit-new-form-field\"\n                />\n              ) : (\n                <Input.TextArea\n                  placeholder={item.placeholder}\n                  className={`edit-new-form-field ${item.className}`}\n                  rows={3}\n                />\n              )}\n            </Form.Item>\n          ))}\n          <Flex justify=\"flex-end\" gap=\"large\">\n            <Button\n              danger\n              className=\"edit-new-form-button\"\n              onClick={onCancel}\n              htmlType=\"button\"\n            >\n              Відмінити\n            </Button>\n            <Button\n              type=\"primary\"\n              className=\"edit-new-form-button button-accent\"\n              htmlType=\"submit\"\n            >\n              Опублікувати\n            </Button>\n          </Flex>\n        </Form>\n      </Flex>\n    </Layout>\n  );\n};\n\nexport default EditNew;\n"],"names":["editNewFormItems","name","required","message","placeholder","inputType","className","props","form","Form","useForm","dispatch","useDispatch","navigate","useNavigate","_jsx","Layout","children","_jsxs","Flex","vertical","align","justify","gap","Title","onFinish","async","undefined","newItem","validateFields","data","date","dayjs","Date","format","constants","toString","addNew","map","item","Item","rules","Input","TextArea","concat","rows","Button","danger","onClick","onCancel","resetFields","htmlType","type"],"sourceRoot":""}